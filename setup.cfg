# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = bluetooth-clocks
description = Set and get the time on various Bluetooth Low Energy clocks
author = Koen Vervloesem
author_email = koen@vervloesem.eu
license = MIT
license_files = LICENSE.txt
long_description = file: README.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/koenvervloesem/bluetooth-clocks
# Add here related links, for example:
project_urls =
    Documentation = https://bluetooth-clocks.readthedocs.io/
    Source = https://github.com/koenvervloesem/bluetooth-clocks
    Changelog = https://github.com/koenvervloesem/bluetooth-clocks/blob/main/CHANGELOG.rst
    Tracker = https://github.com/koenvervloesem/bluetooth-clocks/issues
    Download = https://pypi.org/project/bluetooth-clocks/#files

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Environment :: Console
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: MacOS
    Operating System :: Microsoft :: Windows
    Operating System :: POSIX :: Linux
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3 :: Only
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: 3.9
	Programming Language :: Python :: 3.10
	Programming Language :: Python :: 3.11
	Topic :: Software Development :: Libraries
	Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Utilities

keywords = bluetooth,ble,bluetooth-low-energy,clocks,time,time-synchronization,get-time,set-time,current-time-service

[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

python_requires = >=3.7

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    bleak>=0.19.0
    importlib-metadata; python_version<"3.8"


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install bluetooth-clocks[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    time-machine
    backports-zoneinfo; python_version<"3.9"
    tzdata

[options.entry_points]
console_scripts =
    bluetooth-clocks = bluetooth_clocks.__main__:run

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov bluetooth_clocks --cov-report term-missing
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
# flake8-docstrings config
docstring-convention = google
# For flake8-rst-docstrings:
rst-roles =
    class,
    func,
    ref,
    meth,
    mod,
    obj,
rst-directives =
    envvar,
    exception,
rst-substitutions =
    version,
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
    RST307,
    # Google Python style is not RST until after processed by Napoleon
    # See https://github.com/peterjc/flake8-rst-docstrings/issues/17
    RST201,RST203,RST301,
    # Missing type annotations for self and cls in (class) method
    ANN101,ANN102,
    # Handled by flake8-length
    E501, W505,
    # Opinionated check by flake8-picky-parentheses
    PAR101,
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
# flake8-pytest-style config
pytest-parametrize-names-type = csv

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.3.1
package = bluetooth_clocks
extensions =
    github_actions
    pre_commit
